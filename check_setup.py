#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Telegram –±–æ—Ç–∞
"""

import asyncio
from config_example import BOT_TOKEN, LLAMA_SERVER_URL
# üêç –ò–∑—É—á–∞–µ–º: –ò–º–ø–æ—Ä—Ç—ã –∏–∑ –ø–∞–∫–µ—Ç–∞ `src`
# –¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ –Ω–∞—à –∫–æ–¥ –≤ –ø–∞–∫–µ—Ç–µ, –º—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–≥–æ –≤–æ—Ç —Ç–∞–∫.
from src.llama_client import LlamaClient
from src.context_manager import ContextManager


async def main():
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –±–æ—Ç–∞ —Å LLaMA")
    print("="*50)
    
    # --- –¢–µ—Å—Ç 1: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
    print("\n1Ô∏è‚É£  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    config_ok = True
    if not BOT_TOKEN or BOT_TOKEN == "your_bot_token_here":
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ config_example.py!")
        config_ok = False
    else:
        print("‚úÖ BOT_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω.")
    
    if not LLAMA_SERVER_URL:
        print("‚ùå LLAMA_SERVER_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ config_example.py!")
        config_ok = False
    else:
        print(f"‚úÖ LLAMA_SERVER_URL: {LLAMA_SERVER_URL}")

    # --- –¢–µ—Å—Ç 2: –ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ ---
    print("\n2Ô∏è‚É£  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ContextManager...")
    context_ok = True
    try:
        cm = ContextManager()
        cm.add_message(1, "user", "test")
        if cm.get_context_info(1)["messages"] != 1:
            raise ValueError("Message count is incorrect")
        cm.clear_context(1)
        if cm.get_context_info(1)["messages"] != 0:
            raise ValueError("Context clearing failed")
        print("‚úÖ ContextManager —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ ContextManager: {e}")
        context_ok = False
        
    # --- –¢–µ—Å—Ç 3: LLaMA –ö–ª–∏–µ–Ω—Ç ---
    print("\n3Ô∏è‚É£  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LlamaClient...")
    llama_ok = True
    try:
        client = LlamaClient()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ `check_server_health`
        is_healthy = client.check_server_health()
        if is_healthy:
            print("‚úÖ LLaMA —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç—É /health.")
            # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
            # response = await client.send_message("–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.")
            # print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ /completion –ø—Ä–æ—à–µ–ª. –û—Ç–≤–µ—Ç: {'OK' if response else '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞'}")
        else:
            print("‚ö†Ô∏è LLaMA —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω.")
            # –≠—Ç–æ—Ç —Ç–µ—Å—Ç –Ω–µ –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–≤–∞–ª—å–Ω—ã–º, —Ç.–∫. —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∫–ª—é—á–µ–Ω
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ LlamaClient: {e}")
        llama_ok = False
        
    # --- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ---
    print("\n" + "="*50)
    if all([config_ok, context_ok, llama_ok]):
        print("üéâ –í–°–ï –û–°–ù–û–í–ù–´–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: python -m src.bot")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏.")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}") 