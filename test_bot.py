#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Telegram –±–æ—Ç–∞

üêç –ò–∑—É—á–∞–µ–º:
- –ú–æ–¥—É–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º
"""

import asyncio
import sys
from config_example import BOT_TOKEN, LLAMA_SERVER_URL, MAX_CONTEXT_MESSAGES
from llama_client import LlamaClient
from context_manager import ContextManager


def test_config():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    
    üêç –ò–∑—É—á–∞–µ–º:
    - –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    - –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    """
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º BOT_TOKEN
    if BOT_TOKEN == "your_bot_token_here":
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("   –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –∏ –æ–±–Ω–æ–≤–∏—Ç–µ config_example.py")
        return False
    elif len(BOT_TOKEN) < 40:
        print("‚ùå BOT_TOKEN –≤—ã–≥–ª—è–¥–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return False
    else:
        print(f"‚úÖ BOT_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {BOT_TOKEN[:10]}...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL LLaMA
    print(f"‚úÖ LLaMA Server URL: {LLAMA_SERVER_URL}")
    print(f"‚úÖ Max Context Messages: {MAX_CONTEXT_MESSAGES}")
    
    return True


def test_context_manager():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    
    üêç –ò–∑—É—á–∞–µ–º:
    - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
    - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    """
    print("\nüíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ContextManager...")
    
    try:
        cm = ContextManager()
        test_user_id = 12345
        
        # –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        cm.add_message(test_user_id, "user", "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ 1")
        cm.add_message(test_user_id, "assistant", "–û—Ç–≤–µ—Ç –±–æ—Ç–∞ 1")
        cm.add_message(test_user_id, "user", "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ 2")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        context = cm.get_context(test_user_id)
        if len(context) > 0:
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
            return False
        
        # –¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        info = cm.get_context_info(test_user_id)
        if info['messages'] == 3:
            print("‚úÖ –ü–æ–¥—Å—á–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print(f"‚ùå –û–∂–∏–¥–∞–ª–æ—Å—å 3 —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ–ª—É—á–µ–Ω–æ {info['messages']}")
            return False
        
        # –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        cm.clear_context(test_user_id)
        cleared_info = cm.get_context_info(test_user_id)
        if cleared_info['messages'] == 0:
            print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ ContextManager: {e}")
        return False


async def test_llama_client():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç LLaMA –∫–ª–∏–µ–Ω—Ç
    
    üêç –ò–∑—É—á–∞–µ–º:
    - –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    """
    print("\nü¶ô –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LlamaClient...")
    
    try:
        client = LlamaClient()
        
        # –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
        is_healthy = client.check_server_health()
        if is_healthy:
            print("‚úÖ LLaMA —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
            
            # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è...")
            response = await client.send_message("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
            
            if response:
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {response[:50]}...")
                return True
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç LLaMA")
                return False
        else:
            print("‚ö†Ô∏è LLaMA —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            print("   –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ llama-cpp-python —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞", LLAMA_SERVER_URL)
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ LlamaClient: {e}")
        return False


def print_instructions():
    """
    –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞
    
    üêç –ò–∑—É—á–∞–µ–º:
    - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    """
    print("\n" + "="*60)
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ó–ê–ü–£–°–ö–£ –ë–û–¢–ê")
    print("="*60)
    
    print("\n1Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:")
    print("   - –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —É @BotFather –≤ Telegram")
    print("   - –û–±–Ω–æ–≤–∏—Ç–µ BOT_TOKEN –≤ config_example.py")
    
    print("\n2Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏—Ç–µ LLaMA —Å–µ—Ä–≤–µ—Ä:")
    print("   pip install llama-cpp-python[server]")
    print("   python -m llama_cpp.server --model path/to/your/model.gguf --host 0.0.0.0 --port 8080")
    
    print("\n3Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:")
    print("   python bot.py")
    
    print("\n4Ô∏è‚É£ –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:")
    print("   ‚úÖ –î–∏–∞–ª–æ–≥ —Å LLaMA –º–æ–¥–µ–ª—å—é")
    print("   ‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ 20 —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è —Å–±—Ä–æ—Å–∞")
    print("   ‚úÖ Inline –∫–Ω–æ–ø–∫–∞ '–°–±—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç'")
    
    print("\nüêç –ß—Ç–æ –≤—ã –∏–∑—É—á–∏–ª–∏:")
    print("   ‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (async/await)")
    print("   ‚úÖ –ö–ª–∞—Å—Å—ã –∏ –æ–±—ä–µ–∫—Ç—ã")
    print("   ‚úÖ –†–∞–±–æ—Ç–∞ —Å API (HTTP –∑–∞–ø—Ä–æ—Å—ã)")
    print("   ‚úÖ Telegram Bot API —á–µ—Ä–µ–∑ aiogram")
    print("   ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
    print("   ‚úÖ –ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å –∫–æ–¥–∞")


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    üêç –ò–∑—É—á–∞–µ–º:
    - –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    - –°–±–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    """
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –±–æ—Ç–∞ —Å LLaMA")
    print("="*50)
    
    all_tests_passed = True
    
    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if not test_config():
        all_tests_passed = False
    
    # –¢–µ—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if not test_context_manager():
        all_tests_passed = False
    
    # –¢–µ—Å—Ç LLaMA –∫–ª–∏–µ–Ω—Ç–∞
    if not await test_llama_client():
        all_tests_passed = False
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "="*50)
    if all_tests_passed:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    print_instructions()


if __name__ == "__main__":
    asyncio.run(main()) 