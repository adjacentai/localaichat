import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
from config_example import BOT_TOKEN
from llama_client import LlamaClient
from context_manager import ContextManager

# üêç –ò–∑—É—á–∞–µ–º: –ò–º–ø–æ—Ä—Ç –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ –¥–ª—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –Ω–∞—à–∏—Ö –∫–ª–∞—Å—Å–æ–≤
llama_client = LlamaClient()
context_manager = ContextManager()


# üîò –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_reset_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π —Å–±—Ä–æ—Å–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    
    üêç –ò–∑—É—á–∞–µ–º:
    - –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–Ω–æ–ø–æ–∫
    - Callback –¥–∞–Ω–Ω—ã–µ
    - –í–æ–∑–≤—Ä–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç", 
            callback_data="reset_context"
        )]
    ])
    return keyboard


# üéØ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥
    """
    user_id = message.from_user.id
    
    # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context_manager.clear_context(user_id)
    
    await message.answer(
        "üîÑ –î–∏–∞–ª–æ–≥ —Å–±—Ä–æ—à–µ–Ω!\n\n"
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å LLaMA –º–æ–¥–µ–ª—å—é!\n"
        "üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —è –æ—Ç–≤–µ—á—É\n"
        "üîÑ –ò—Å–ø–æ–ª—å–∑—É–π /start –¥–ª—è —Å–±—Ä–æ—Å–∞ –¥–∏–∞–ª–æ–≥–∞\n\n"
        "üíæ –Ø –∑–∞–ø–æ–º–∏–Ω–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        reply_markup=get_reset_keyboard()
    )
    print(f"üü¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")


# üîò –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline –∫–Ω–æ–ø–∫—É
@dp.callback_query()
async def callback_handler(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline –∫–Ω–æ–ø–æ–∫
    
    üêç –ò–∑—É—á–∞–µ–º:
    - –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –¥–∞–Ω–Ω—ã—Ö
    - –û—Ç–≤–µ—Ç –Ω–∞ callback –∑–∞–ø—Ä–æ—Å—ã
    - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    """
    user_id = callback.from_user.id
    
    if callback.data == "reset_context":
        # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context_manager.clear_context(user_id)
        
        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback (—É–±–∏—Ä–∞–µ—Ç "—á–∞—Å–∏–∫–∏" —Å –∫–Ω–æ–ø–∫–∏)
        await callback.answer("üîÑ –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–±—Ä–æ—à–µ–Ω!")
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.message.edit_text(
            "üîÑ –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ —Å–±—Ä–æ—à–µ–Ω!\n\n"
            "–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä.",
            reply_markup=get_reset_keyboard()
        )
        
        print(f"üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–±—Ä–æ—Å–∏–ª –∫–æ–Ω—Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É")


# üìù –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def chat_handler(message: Message) -> None:
    """
    –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π - —Å inline –∫–Ω–æ–ø–∫–æ–π
    
    üêç –ò–∑—É—á–∞–µ–º:
    - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∫ –æ—Ç–≤–µ—Ç–∞–º
    - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    """
    user_id = message.from_user.id
    user_text = message.text
    
    print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {user_text}")
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context_manager.add_message(user_id, "user", user_text)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        current_context = context_manager.get_context(user_id)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
        await message.bot.send_chat_action(user_id, "typing")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ LLaMA
        llama_response = await llama_client.send_message(user_text, current_context)
        
        if llama_response:
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
            context_manager.add_message(user_id, "assistant", llama_response)
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            context_info = context_manager.get_context_info(user_id)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∫ –æ—Ç–≤–µ—Ç—É
            response_with_info = (
                f"{llama_response}\n\n"
                f"üíæ –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_info['messages']}/{context_info['max_messages']} —Å–æ–æ–±—â–µ–Ω–∏–π"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å inline –∫–Ω–æ–ø–∫–æ–π
            await message.answer(
                response_with_info,
                reply_markup=get_reset_keyboard()
            )
            
            print(f"üíæ –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_info['messages']}/{context_info['max_messages']}")
            
        else:
            # –ï—Å–ª–∏ LLaMA –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            await message.answer(
                "üòî –ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ–π—á–∞—Å —è –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å.\n"
                "üîß –ü—Ä–æ–±–ª–µ–º–∞ —Å LLaMA —Å–µ—Ä–≤–µ—Ä–æ–º.\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.",
                reply_markup=get_reset_keyboard()
            )
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer(
            "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=get_reset_keyboard()
        )


# üöÄ –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main() -> None:
    """
    –ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
    """
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å LLaMA —Å–µ—Ä–≤–µ—Ä–∞
    if llama_client.check_server_health():
        print("‚úÖ LLaMA —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
    else:
        print("‚ö†Ô∏è LLaMA —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ—à–∏–±–∫–∞–º–∏.")
    
    print("ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("üîò –î–æ—Å—Ç—É–ø–Ω–∞ inline –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling(bot)


# üé¨ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == '__main__':
    """
    üêç –ò–∑—É—á–∞–µ–º:
    - –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞
    - –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã
    """
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}") 